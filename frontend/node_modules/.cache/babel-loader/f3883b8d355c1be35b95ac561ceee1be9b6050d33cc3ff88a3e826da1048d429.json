{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/CodeRelix Internship Nov 2024/PulseFit/frontend/src/components/Settings/Settings.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Settings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    sendToMembers: false,\n    sendToEmployees: false\n  });\n  const handleChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: checked\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('Form Data Submitted:', formData);\n\n    // Get token from localStorage\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.error('No token found');\n      return;\n    }\n\n    // Send data to backend (POST request)\n    try {\n      const response = await fetch('http://localhost:3000/updateSettings', {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          // Add token in Authorization header\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sendToMembers: formData.sendToMembers,\n          sendToEmployees: formData.sendToEmployees\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(`Settings updated!\\nSend to Members: ${formData.sendToMembers}\\nSend to Employees: ${formData.sendToEmployees}`);\n      } else {\n        alert(`Error: ${data.message}`);\n      }\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      alert('There was an error submitting the form.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Recipients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"sendToMembers\",\n          checked: formData.sendToMembers,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), \"Send to Members\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"sendToEmployees\",\n          checked: formData.sendToEmployees,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), \"Send to Employees\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Settings, \"lrl3ukbep3eOUkLncLZxG9ts0qg=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Settings","_s","formData","setFormData","sendToMembers","sendToEmployees","handleChange","e","name","checked","target","handleSubmit","preventDefault","console","log","token","localStorage","getItem","error","response","fetch","method","headers","Authorization","body","JSON","stringify","data","json","ok","alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/CodeRelix Internship Nov 2024/PulseFit/frontend/src/components/Settings/Settings.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './Settings.css';\n\nconst Settings = () => {\n    const [formData, setFormData] = useState({\n        sendToMembers: false,\n        sendToEmployees: false,\n    });\n\n    const handleChange = (e) => {\n        const { name, checked } = e.target;\n        setFormData({\n            ...formData,\n            [name]: checked,\n        });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log('Form Data Submitted:', formData);\n\n        // Get token from localStorage\n        const token = localStorage.getItem('token');\n        if (!token) {\n            console.error('No token found');\n            return;\n        }\n\n        // Send data to backend (POST request)\n        try {\n            const response = await fetch('http://localhost:3000/updateSettings', {\n                method: 'POST',\n                headers: {\n                    Authorization: `Bearer ${token}`,  // Add token in Authorization header\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    sendToMembers: formData.sendToMembers,\n                    sendToEmployees: formData.sendToEmployees,\n                }),\n            });\n\n            const data = await response.json();\n            if (response.ok) {\n                alert(`Settings updated!\\nSend to Members: ${formData.sendToMembers}\\nSend to Employees: ${formData.sendToEmployees}`);\n            } else {\n                alert(`Error: ${data.message}`);\n            }\n        } catch (error) {\n            console.error('Error submitting form:', error);\n            alert('There was an error submitting the form.');\n        }\n    };\n\n    return (\n        <div className='auth-container'>\n            <div className='form-container'>\n                <h2>Select Recipients</h2>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        name=\"sendToMembers\"\n                        checked={formData.sendToMembers}\n                        onChange={handleChange}\n                    />\n                    Send to Members\n                </label>\n                <br />\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        name=\"sendToEmployees\"\n                        checked={formData.sendToEmployees}\n                        onChange={handleChange}\n                    />\n                    Send to Employees\n                </label>\n                <br />\n                <button onClick={handleSubmit}>Submit</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Settings;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}