{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/CodeRelix Internship Nov 2024/PulseFit/frontend/src/ProtectedRoute.jsx\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  element,\n  requiredRole\n}) => {\n  const isAuthenticated = localStorage.getItem('token') !== null;\n  const userRole = localStorage.getItem('role');\n  if (!isAuthenticated) {\n    // Redirect to the login page if not authenticated\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  if (requiredRole && userRole !== requiredRole) {\n    // Redirect based on roles\n    if (userRole === 'Admin') {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }, this);\n    }\n    if (userRole === 'Member') {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/home2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }, this);\n    }\n    if (userRole === 'Employee') {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/home3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }, this);\n    }\n    // Default fallback\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the element if all conditions are met\n  return element;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","element","requiredRole","isAuthenticated","localStorage","getItem","userRole","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/CodeRelix Internship Nov 2024/PulseFit/frontend/src/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\n\nconst ProtectedRoute = ({ element, requiredRole }) => {\n  const isAuthenticated = localStorage.getItem('token') !== null;\n  const userRole = localStorage.getItem('role');\n\n  if (!isAuthenticated) {\n    // Redirect to the login page if not authenticated\n    return <Navigate to=\"/\" />;\n  }\n\n  if (requiredRole && userRole !== requiredRole) {\n    // Redirect based on roles\n    if (userRole === 'Admin') {\n      return <Navigate to=\"/home\" />;\n    }\n    if (userRole === 'Member') {\n      return <Navigate to=\"/home2\" />;\n    }\n    if (userRole === 'Employee') {\n      return <Navigate to=\"/home3\" />;\n    }\n    // Default fallback\n    return <Navigate to=\"/\" />;\n  }\n\n  // Render the element if all conditions are met\n  return element;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAa,CAAC,KAAK;EACpD,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI;EAC9D,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAE7C,IAAI,CAACF,eAAe,EAAE;IACpB;IACA,oBAAOJ,OAAA,CAACF,QAAQ;MAACU,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;EAEA,IAAIT,YAAY,IAAII,QAAQ,KAAKJ,YAAY,EAAE;IAC7C;IACA,IAAII,QAAQ,KAAK,OAAO,EAAE;MACxB,oBAAOP,OAAA,CAACF,QAAQ;QAACU,EAAE,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAChC;IACA,IAAIL,QAAQ,KAAK,QAAQ,EAAE;MACzB,oBAAOP,OAAA,CAACF,QAAQ;QAACU,EAAE,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACjC;IACA,IAAIL,QAAQ,KAAK,UAAU,EAAE;MAC3B,oBAAOP,OAAA,CAACF,QAAQ;QAACU,EAAE,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACjC;IACA;IACA,oBAAOZ,OAAA,CAACF,QAAQ;MAACU,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;;EAEA;EACA,OAAOV,OAAO;AAChB,CAAC;AAACW,EAAA,GA1BIZ,cAAc;AA4BpB,eAAeA,cAAc;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}